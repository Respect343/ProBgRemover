<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ProBgRemover - AI Background Removal</title>
    <style>
        :root {
            --primary: #1a1a1a;
            --secondary: #ff4757;
            --accent: #2ed573;
            --free: #ffa502;
            --hd: #1e90ff;
            --hq: #ff6b6b;
            --premium: #a55eea;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', sans-serif;
        }

        body {
            background: var(--primary);
            color: white;
            min-height: 100vh;
        }

        .header {
            padding: 1rem 5%;
            background: linear-gradient(135deg, var(--secondary), var(--accent));
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        }

        .upload-zone {
            background: linear-gradient(135deg, rgba(46,213,115,0.1), rgba(30,144,255,0.1));
            border: 4px dashed var(--accent);
            padding: 3rem;
            margin: 2rem auto;
            max-width: 800px;
            text-align: center;
            border-radius: 15px;
            transition: all 0.3s ease;
            cursor: pointer;
            position: relative;
            overflow: hidden;
        }

        .upload-zone::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: 0.5s;
        }

        .upload-zone:hover {
            transform: scale(1.02);
            box-shadow: 0 0 30px rgba(46,213,115,0.2);
        }

        .upload-zone:hover::before {
            left: 100%;
        }

        .upload-icon {
            font-size: 3rem;
            margin-bottom: 1rem;
            animation: float 3s ease-in-out infinite;
        }

        .pricing-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 2rem;
            padding: 2rem 5%;
        }

        .price-card {
            background: rgba(255,255,255,0.08);
            padding: 2rem;
            border-radius: 15px;
            text-align: center;
            transition: 0.3s;
            position: relative;
            overflow: hidden;
        }

        .price-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 10px 30px rgba(0,0,0,0.3);
        }

        button {
            border: none;
            padding: 1rem 2rem;
            color: white;
            border-radius: 8px;
            cursor: pointer;
            transition: 0.3s;
            font-weight: bold;
            text-transform: uppercase;
            letter-spacing: 1px;
            margin: 0.5rem;
        }

        .free-btn {
            background: linear-gradient(45deg, var(--free), #ff6348);
        }

        .hd-btn {
            background: linear-gradient(45deg, var(--hd), #2ed573);
        }

        .hq-btn {
            background: linear-gradient(45deg, var(--hq), #ffa502);
        }

        .premium-btn {
            background: linear-gradient(45deg, var(--premium), #ff4757);
        }

        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.3);
        }

        .result-section {
            display: none;
            margin: 2rem auto;
            max-width: 1200px;
            text-align: center;
        }

        .image-comparison {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
            margin-bottom: 2rem;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-10px); }
        }

        .loader {
            display: none;
            border: 4px solid rgba(255,255,255,0.1);
            border-top: 4px solid var(--accent);
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 2rem auto;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <header class="header">
        <h1>ProBgRemover</h1>
        <nav>
            <button>Home</button>
            <button>Pricing</button>
            <button>Account</button>
        </nav>
    </header>

    <main>
        <div class="upload-zone" id="dropZone">
            <div class="upload-icon">??</div>
            <h2>Drag & Drop Image Here</h2>
            <p>or click to upload (Free: 0 Up to 500KB)</p>
            <input type="file" id="fileInput" hidden accept="image/*">
            <div class="loader" id="loader"></div>
        </div>

        <div class="result-section" id="resultSection">
            <div class="image-comparison">
                <div>
                    <h3>Original</h3>
                    <img id="originalImage" src="#" alt="Original">
                </div>
                <div>
                    <h3>Processed</h3>
                    <img id="processedImage" src="#" alt="Processed">
                </div>
            </div>
            <button id="downloadFree" class="free-btn">Download Free (10KB to a500KB)</button>
            <button id="downloadHd" class="hd-btn">HD 1080p ($10)</button>
            <button id="downloadHq" class="hq-btn">2K Quality ($30)</button>
            <button id="downloadPremium" class="premium-btn">4K Premium ($50)</button>
        </div>

        <div class="pricing-cards">
            <div class="price-card free-plan">
                <h3>Free Tier</h3>
                <p>Up to 500KB</p>
                <p>Standard Quality</p>
                <p>Watermarked</p>
                <button class="free-btn">Use Free</button>
            </div>
            <div class="price-card">
                <h3>HD 1080p - $10</h3>
                <p>High Definition</p>
                <p>No Watermark</p>
                <p>Priority Processing</p>
                <button class="hd-btn">Buy Now</button>
            </div>
            <div class="price-card">
                <h3>2K Quality - $30</h3>
                <p>Ultra HD</p>
                <p>No Watermark</p>
                <p>Faster Processing</p>
                <button class="hq-btn">Buy Now</button>
            </div>
            <div class="price-card">
                <h3>4K Premium - $50</h3>
                <p>Maximum Quality</p>
                <p>No Watermark</p>
                <p>Instant Processing</p>
                <button class="premium-btn">Buy Now</button>
            </div>
        </div>
    </main>

    <script>
        const API_KEY = 'RSa2YHu3weMBeQFLeuDzGFJP';
        let currentFile = null;

        // Enhanced File Handling
        const handleFile = async (file, tier = 'free') => {
            if (tier === 'free' && file.size > 500 * 1024) {
                alert('Free tier limited to 500KB. Please upgrade!');
                return;
            }

            document.getElementById('loader').style.display = 'block';
            
            try {
                const { size, format, quality } = getSettings(tier);
                const formData = new FormData();
                formData.append('image_file', file);
                formData.append('size', size);
                formData.append('format', format);
                if (format === 'jpg') formData.append('quality', quality);

                const response = await fetch('https://api.remove.bg/v1.0/removebg', {
                    method: 'POST',
                    headers: { 'X-Api-Key': API_KEY },
                    body: formData
                });

                if (!response.ok) throw new Error(await response.text());
                
                const result = await response.blob();
                const url = URL.createObjectURL(result);
                
                document.getElementById('processedImage').src = url;
                document.getElementById('originalImage').src = URL.createObjectURL(file);
                document.getElementById('resultSection').style.display = 'block';

            } catch (error) {
                console.error('Error:', error);
                alert(`Error: ${error.message}`);
            } finally {
                document.getElementById('loader').style.display = 'none';
            }
        };

        const getSettings = (tier) => {
            switch(tier) {
                case 'hd': return { size: 'full', format: 'jpg', quality: 85 };
                case 'hq': return { size: 'full', format: 'jpg', quality: 95 };
                case 'premium': return { size: 'full', format: 'jpg', quality: 100 };
                default: return { size: 'preview', format: 'png', quality: 80 };
            }
        };

        // Event Listeners
        document.getElementById('fileInput').addEventListener('change', (e) => {
            currentFile = e.target.files[0];
            handleFile(currentFile, 'free');
        });

        document.getElementById('dropZone').addEventListener('click', () => {
            document.getElementById('fileInput').click();
        });

        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(event => {
            document.getElementById('dropZone').addEventListener(event, preventDefaults, false);
        });

        function preventDefaults (e) {
            e.preventDefault();
            e.stopPropagation();
        }

        document.getElementById('dropZone').addEventListener('drop', (e) => {
            const file = e.dataTransfer.files[0];
            currentFile = file;
            handleFile(file, 'free');
        });

        // Payment Simulation
        document.querySelectorAll('.price-card button').forEach(button => {
            button.addEventListener('click', () => {
                const tier = button.classList.contains('hd-btn') ? 'hd' :
                           button.classList.contains('hq-btn') ? 'hq' :
                           button.classList.contains('premium-btn') ? 'premium' : 'free';
                           
                if (tier !== 'free' && currentFile) {
                    if (confirm(`Process this image in ${tier.toUpperCase()} quality for $${getPrice(tier)}?`)) {
                        handleFile(currentFile, tier);
                    }
                }
            });
        });

        const getPrice = (tier) => {
            switch(tier) {
                case 'hd': return 10;
                case 'hq': return 30;
                case 'premium': return 50;
                default: return 0;
            }
        };
    </script>
</body>
</html>
